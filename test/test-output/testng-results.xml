<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="140" started-at="2022-01-16T12:03:49 IST" finished-at="2022-01-16T12:03:50 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="140" started-at="2022-01-16T12:03:49 IST" finished-at="2022-01-16T12:03:50 IST">
      <class name="test.java.ExtentReport.ExtentReportDemo.Test1_FAIL">
        <test-method status="PASS" signature="beforeClassM()[pri:0, instance:test.java.ExtentReport.ExtentReportDemo.Test1_FAIL@646d64ab]" name="beforeClassM" is-config="true" duration-ms="15" started-at="2022-01-16T12:03:49 IST" finished-at="2022-01-16T12:03:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassM -->
        <test-method status="PASS" signature="beforeMethodM()[pri:0, instance:test.java.ExtentReport.ExtentReportDemo.Test1_FAIL@646d64ab]" name="beforeMethodM" is-config="true" duration-ms="15" started-at="2022-01-16T12:03:50 IST" finished-at="2022-01-16T12:03:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodM -->
        <test-method status="FAIL" signature="testM1()[pri:0, instance:test.java.ExtentReport.ExtentReportDemo.Test1_FAIL@646d64ab]" name="testM1" duration-ms="16" started-at="2022-01-16T12:03:50 IST" finished-at="2022-01-16T12:03:50 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[in TC1 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: in TC1 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at test.java.ExtentReport.ExtentReportDemo.Test1_FAIL.testM1(Test1_FAIL.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testM1 -->
        <test-method status="PASS" signature="beforeMethodM()[pri:0, instance:test.java.ExtentReport.ExtentReportDemo.Test1_FAIL@646d64ab]" name="beforeMethodM" is-config="true" duration-ms="0" started-at="2022-01-16T12:03:50 IST" finished-at="2022-01-16T12:03:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodM -->
        <test-method status="FAIL" signature="testM2()[pri:0, instance:test.java.ExtentReport.ExtentReportDemo.Test1_FAIL@646d64ab]" name="testM2" duration-ms="16" started-at="2022-01-16T12:03:50 IST" finished-at="2022-01-16T12:03:50 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[in TC2 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: in TC2 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at test.java.ExtentReport.ExtentReportDemo.Test1_FAIL.testM2(Test1_FAIL.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testM2 -->
        <test-method status="PASS" signature="afterClassM()[pri:0, instance:test.java.ExtentReport.ExtentReportDemo.Test1_FAIL@646d64ab]" name="afterClassM" is-config="true" duration-ms="0" started-at="2022-01-16T12:03:50 IST" finished-at="2022-01-16T12:03:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassM -->
      </class> <!-- test.java.ExtentReport.ExtentReportDemo.Test1_FAIL -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
